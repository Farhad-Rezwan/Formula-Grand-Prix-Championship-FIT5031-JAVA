#BlueJ class context
comment0.target=Championship
comment0.text=\n\ The\ Championship\ class\ manages\ the\ ovarall\ race\n\n\ @author\ Farhad\ Ullah\ Rezwan\n\ @version\ 1.0\ (1.6.2019)\n
comment1.params=
comment1.target=Championship()
comment1.text=\n\ Constructor\ for\ objects\ of\ class\ Championship\n
comment10.params=
comment10.target=ListOfDrivers\ sortForGridDrivers()
comment10.text=\n\ Mehotd\ to\ sort\ the\ drivers\ in\ accordence\ to\ the\ ranking\n\ \n\ @return\ an\ array\ list\ of\ drivers\ which\ are\ temporary,\ sorted\ drivers\ list\n
comment11.params=howMany
comment11.target=int[]\ selectVenues(int)
comment11.text=\n\ helps\ to\ interact\ with\ organizer\ for\ selecting\ venues\n\ \n\ @return\ an\ arry\ of\ integer\ that\ represents\ the\ selected\ venues\ index\ numbers;\n
comment12.params=
comment12.target=void\ showGridPositions()
comment12.text=\n\ This\ method\ helps\ to\ display\ grid\ position\n
comment13.params=newSelectedVenues
comment13.target=void\ showSelectedVenues(int[])
comment13.text=\n\ This\ method\ helps\ to\ show\ the\ selected\ venues\ from\ the\ users\n\ \n\ @param\ newSelectedVenues\ a\ arraylist\ of\ integer\ that\ represents\ the\ index\ of\ selected\ venues\n
comment14.params=newSelectedVenues
comment14.target=ListOfVenues\ userSelectedVenues(int[])
comment14.text=\n\ This\ method\ helps\ to\ hold\ the\ venues\ that\ the\ organisers\ selected\ for\ the\ championship\n\ \n\ @return\ An\ array\ list\ of\ venues\ which\ are\ applicable\ for\ the\ championships\n\ \n\ @param\ newSelectedVenues\ represents\ an\ array\ that\ shows\ selected\ indexes\ of\ venues\n
comment15.params=
comment15.target=void\ readDriverFile()
comment15.text=\n\ read\ driver\ file\ has\ to\ be\ once\ otherwise\ the\ driver\ number\ will\ be\ appended\n
comment16.params=
comment16.target=void\ readVenueFile()
comment16.text=\n\ read\ driver\ file\ has\ to\ be\ once\ otherwise\ the\ driver\ number\ will\ be\ appended\n
comment17.params=newVenueLaps\ newVenueAvgT\ newVenueChRain
comment17.target=void\ raceForLaps(int,\ int,\ double)
comment17.text=\n\ This\ method\ runs\ to\ manage\ each\ laps,\ displays\ the\ drivers\ lap\ time\ summary\ assigning\ penalty\ for\ grid\ position,\ and\ random\ event\n\ and\ benefit\ for\ special\ skills,\ and\ displays\ the\ lap\ leading\ position\ summary.\n\ \n\ @param\ newVenueLaps\ an\ integer\ value\ represents\ how\ many\ laps\ are\ there\ for\ the\ venue\n\ @param\ newVenueAvgT\ an\ integer\ value\ represents\ average\ time\ for\ a\ venue\n\ @param\ newVenueChRain\ a\ double\ that\ represents\ chances\ of\ rain\ for\ a\ venue\n\ \n
comment18.params=
comment18.target=void\ changeRankings()
comment19.params=selectedVenues
comment19.target=void\ raceForVenue(int[])
comment19.text=\n\ This\ method\ loops\ the\ number\ of\ races\ in\ to\ the\ selected\ venues\ starting\ with\ showing\n\ venue\ summary\ at\ the\ begaining.\n\ \n\ @param\ selectedVenues\ number\ indexes\ for\ selected\ venues\ from\ list\ of\ venues\ as\ an\ array\n
comment2.params=newDrivers\ newVenues
comment2.target=Championship(ListOfDrivers,\ ListOfVenues)
comment2.text=\n\ Non-default\ constructor\ for\ objects\ of\ class\ Championship\n\ \n\ @param\ newDrivers\ helps\ to\ set\ new\ driver\ list\ into\ the\ championship\n\ @param\ newVenues\ helps\ to\ set\ new\ venue\ list\ into\ the\ championship\n
comment20.params=newDrivers
comment20.target=void\ setDrivers(ListOfDrivers)
comment20.text=\n\ A\ mutator\ method\ to\ set\ drivers\n\ \n\ @param\ ListOfDrivers\ an\ arraylist\ of\ drivers\ that\ represents\ multiple\ drivers\ objects\n
comment21.params=newVenues
comment21.target=void\ setVenues(ListOfVenues)
comment21.text=\n\ A\ mutator\ method\ for\ venues\n\ \n\ @param\ ListOfVenues\ an\ arraylist\ of\ drivers\ that\ represents\ multiple\ venues\ objects\n
comment22.params=
comment22.target=ListOfDrivers\ sortForVenues()
comment22.text=\n\ This\ method\ helps\ to\ sort\ and\ set\ the\ drivers\ in\ accordance\ to\ the\ accumulated\ time\ for\ drivers\ after\ each\ race\n\ \n\ @return\ returns\ an\ array\ list\ of\ drivers\ which\ is\ sorted\ in\ accordance\ to\ Accumulated\ time\ for\ a\ particular\ race\n
comment23.params=
comment23.target=void\ showPointsPositions()
comment23.text=\n\ helps\ to\ show\ points\ positions\ and\ points\ allocaiton\ summary\ for\ all\ drivers\n\ \n
comment24.params=numbers\ icon
comment24.target=void\ showLineWithIcons(int,\ java.lang.String)
comment24.text=\n\ Displays\ line\ with\ a\ certain\ icon\n
comment25.params=numbers\ heading
comment25.target=void\ showLineForHeader(int,\ java.lang.String)
comment25.text=\n\ Display's\ a\ header\ with\ a\ line\ of\ icons.\n\ \n
comment26.params=
comment26.target=ListOfDrivers\ sortChampionshipReasult()
comment26.text=\n\ Helps\ to\ sort\ the\ drivers\ at\ the\ end\ an\ accordance\ to\ the\ accumulated\ score\n\ \n\ @returns\ list\ of\ drivers\ who\ are\ sorted\ in\ accordance\ to\ the\ accumjulated\ score\n
comment27.params=
comment27.target=void\ startProgram()
comment27.text=\n\ This\ method\ helps\ to\ manage\ the\ game\ flow\ for\ the\ Championship\ races,\ while\ doing\ so\ it\ \n\ records\ number\ of\ races\ and\ selected\ venue\ indexes\ as\ a\ local\ veriable\ throughout\ one\ championship\ game.\n
comment28.params=
comment28.target=void\ showResultChampionship()
comment29.params=
comment29.target=void\ welcomeMessage()
comment29.text=\n\ Displays\ welcome\ message\ at\ the\ begining\ of\ each\ championship\n
comment3.params=newRank
comment3.target=int\ assignPenaltyForRace(int)
comment3.text=\n\ helps\ to\ assign\ penalty\ for\ races\ as\ per\ ranks\n\ \n\ @return\ returns\ an\ integer\ which\ represents\ the\ time\ penalty\ for\ a\ rank\n
comment4.params=
comment4.target=void\ assignPointsForARace()
comment4.text=\n\ This\ method\ assigns\ points\ for\ each\ venu\ races\ after\ the\ sort\ is\ done\ for\n\ drivers\ by\ accumulated\ total\ time\ for\ a\ venue.\n
comment5.params=driverIndex
comment5.target=int\ assignRandomEventTimePenalty(int)
comment5.text=\n\ Assigns\ random\ time\ penalty\ for\ the\ faults\ in\ the\ game\n\ \n\ @param\ driverIndex\ an\ integer\ that\ represents\ a\ driver's\ index\ number.\n\ @return\ an\ intager\ which\ represents\ time\ penalty\ as\ per\ major\ or\ minor\ fault.\n
comment6.params=indexNoLap\ driverIndex
comment6.target=int\ assignSpecialSkillBenefit(int,\ int)
comment6.text=\n\ This\ method\ helps\ to\ generate\ the\ special\ skill\ benefit\ in\ second\ for\ the\ a\ particular\ driver\n\ using\ random\ number\ and\ in\ accordance\ with\ lap\ number.\n\ \n\ @param\ indexNoLap\ an\ integer\ that\ represents\ the\ index\ number\ for.\n\ @param\ driverIndex\ an\ integer\ value\ that\ represents\ the\ index\ numbur\ for\ the\ driver.\n\ @return\ returns\ an\ integer\ value\ which\ represent\ second\ which\ will\ be\ deducted\ from\ the\ drivers\ lap\ time\n
comment7.params=
comment7.target=int\ countRaces()
comment7.text=\n\ This\ method\ interacts\ with\ the\ organiser\ and\ helps\ to\ generate\ number\ of\ races\n\ at\ the\ begaining\ of\ championship\n\ \n\ @return\ an\ integer\ value\ that\ indicate\ number\ of\ races\ for\ the\ championship\n
comment8.params=
comment8.target=ListOfDrivers\ getDrivers()
comment8.text=\n\ An\ accessor\ method\ to\ get\ the\ list\ of\ drivers\ for\ the\ championship\n\n\ @return\ list\ of\ drivers\ for\ the\ championship\n
comment9.params=
comment9.target=ListOfVenues\ getVenues()
comment9.text=\n\ An\ accessor\ method\ to\ get\ the\ list\ of\ venues\ for\ the\ championship\n\ \n\ @return\ list\ of\ venues\ for\ the\ championship\n
numComments=30
